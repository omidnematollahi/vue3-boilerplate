@use './typography' as *;
@use './breakpoints' as *;
@use './elevation' as *;

@mixin media-query($screen-size) {
  $size: map-get($breakpoints, $screen-size);

  @if $size {
    // Desktop first approach
    // TODO: Implement configurable approach
    @media only screen and (max-width: $size) {
      @content;
    }
  }
}

@mixin typography($name) {
  $target: map-get($typography, default);
  $level: map-get($target, $name);

  font-size: map-get($level, font-size);
  font-weight: map-get($level, font-weight);
  line-height: map-get($level, line-height);
  letter-spacing: map-get($level, letter-spacing);

  @each $point, $value in $breakpoints {
    $target: map-get($typography, $point);

    @if $target {
      @include media-query($point) {
        $level: map-get($target, $name);

        @if $level {
          font-size: map-get($level, font-size);
          font-weight: map-get($level, font-weight);
          line-height: map-get($level, line-height);
          letter-spacing: map-get($level, letter-spacing);
        }
      }
    }
  }
}

@mixin flex(
  $dir: row,
  $wrap: nowrap,
  $align: flex-start,
  $justify: flex-start
) {
  display: flex;
  flex-direction: $dir;
  flex-wrap: $wrap;
  align-items: $align;
  justify-content: $justify;
}

@mixin elevation($theme, $level, $base-color, $dark-shadow: '') {
  @if $theme == light {
    @include light-elevation($level, $base-color);
  } @else if $theme == dark {
    @include dark-elevation($level, $base-color, $dark-shadow);
  }
}
